openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8081
  description: Generated server url
paths:
  /api/sprinkler/{deviceId}/schedule:
    put:
      tags:
      - sprinkler-controller
      operationId: setSchedule
      parameters:
      - name: deviceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SprinklerScheduleDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
  /api/sprinkler/{deviceId}/schedule/off:
    put:
      tags:
      - sprinkler-controller
      operationId: turnOffSchedule
      parameters:
      - name: deviceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
  /api/sprinkler/{deviceId}/on:
    put:
      tags:
      - sprinkler-controller
      operationId: setOn
      parameters:
      - name: deviceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: val
        in: query
        required: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
  /api/property/pending/reject/{propertyId}:
    put:
      tags:
      - property-controller
      operationId: rejectPending
      parameters:
      - name: propertyId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertyRejectionRequestDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyResponseDTO'
  /api/property/pending/accept/{propertyId}:
    put:
      tags:
      - property-controller
      operationId: acceptPending
      parameters:
      - name: propertyId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyResponseDTO'
  /api/lamp/{deviceId}/bulb-on:
    put:
      tags:
      - lamp-controller
      operationId: turnBulbOn
      parameters:
      - name: deviceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
  /api/lamp/{deviceId}/bulb-off:
    put:
      tags:
      - lamp-controller
      operationId: turnBulbOff
      parameters:
      - name: deviceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
  /api/lamp/{deviceId}/automatic:
    put:
      tags:
      - lamp-controller
      operationId: setAutomatic
      parameters:
      - name: deviceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: val
        in: query
        required: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
  /api/gate/{deviceId}/regime:
    put:
      tags:
      - gate-controller
      operationId: setRegime
      parameters:
      - name: deviceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: public
        in: query
        required: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
  /api/gate/{deviceId}/open:
    put:
      tags:
      - gate-controller
      operationId: setOpen
      parameters:
      - name: deviceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: val
        in: query
        required: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
  /api/gate/{deviceId}/licencePlate:
    put:
      tags:
      - gate-controller
      operationId: addLicencePlate
      parameters:
      - name: deviceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: val
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GateDTO'
  /api/device/largeEnergy/charger/{deviceId}/port:
    put:
      tags:
      - solar-panel-controller
      operationId: changePort
      parameters:
      - name: deviceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: val
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChargerDTO'
  /api/washingMachine/{deviceId}/wmtask:
    post:
      tags:
      - washing-machine-controller
      operationId: addWashingMachineTask
      parameters:
      - name: deviceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WMTaskDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WMTaskDTO'
  /api/washingMachine/{deviceId}/action:
    post:
      tags:
      - washing-machine-controller
      operationId: postActionRequest
      parameters:
      - name: deviceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AirConditionerActionRequest'
        required: true
      responses:
        "200":
          description: OK
  /api/user:
    post:
      tags:
      - app-user-controller
      operationId: registerUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppUserDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUserDTO'
  /api/user/{id}/profileImage:
    get:
      tags:
      - app-user-controller
      operationId: getUserProfileImage
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
    post:
      tags:
      - app-user-controller
      operationId: saveUserProfileImage
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppUserDTO'
  /api/user/superadmin/changePassword:
    post:
      tags:
      - app-user-controller
      operationId: changeSuperadminPassword
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppUserDTO'
  /api/user/login:
    post:
      tags:
      - app-user-controller
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponseDTO'
  /api/user/admin:
    post:
      tags:
      - app-user-controller
      operationId: registerAdmin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppUserDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUserDTO'
  /api/sharing/property:
    post:
      tags:
      - sharing-controller
      operationId: addSharedProperty
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShareActionDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedPropertyDTO'
  /api/sharing/property/delete:
    post:
      tags:
      - sharing-controller
      operationId: deleteSharedProperties
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShareActionDTO'
        required: true
      responses:
        "200":
          description: OK
  /api/sharing/device:
    post:
      tags:
      - sharing-controller
      operationId: addSharedDevice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShareActionDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedDeviceDTO'
  /api/sharing/device/delete:
    post:
      tags:
      - sharing-controller
      operationId: deleteSharedDevice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShareActionDTO'
        required: true
      responses:
        "200":
          description: OK
  /api/property:
    get:
      tags:
      - property-controller
      operationId: getPropertiesForUser
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PropertyResponseDTO'
    post:
      tags:
      - property-controller
      operationId: addProperty
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertyRequestDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponsePropertyResponseDTO'
  /api/property/propertyEnergy:
    post:
      tags:
      - property-controller
      operationId: getElectroByCity
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CityGraphDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GraphDTO'
  /api/property/propertyByDay:
    post:
      tags:
      - property-controller
      operationId: getElectroByDay
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CityGraphDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LabeledGraphDTO'
  /api/mqtt/simpleMsg:
    post:
      tags:
      - communication-controller
      operationId: publish
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/images/property/upload:
    post:
      tags:
      - image-controller
      operationId: uploadPropertyImage
      parameters:
      - name: propertyId
        in: query
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - file
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseMessageDTO'
  /api/images/device/upload:
    post:
      tags:
      - image-controller
      operationId: uploadDeviceImage
      parameters:
      - name: customFileName
        in: query
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - file
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseMessageDTO'
  /api/device/washingMachine:
    post:
      tags:
      - registration-controller
      operationId: saveWashingMachine
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceRequestDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDeviceDTO'
  /api/device/sprinkler:
    post:
      tags:
      - registration-controller
      operationId: saveSprinkler
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceRequestDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDeviceDTO'
  /api/device/solarPanel:
    post:
      tags:
      - registration-controller
      operationId: saveSolarPanel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceRequestDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDeviceDTO'
  /api/device/on/{deviceId}:
    post:
      tags:
      - device-controller
      operationId: turnOn
      parameters:
      - name: deviceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageDTO'
  /api/device/off/{deviceId}:
    post:
      tags:
      - device-controller
      operationId: turnOff
      parameters:
      - name: deviceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
  /api/device/largeEnergy/propertyEnergy:
    post:
      tags:
      - solar-panel-controller
      operationId: getElectoByProperty
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GraphRequestDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GraphDTO'
  /api/device/largeEnergy/panelReadings:
    post:
      tags:
      - solar-panel-controller
      operationId: getSolarPanelReadings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GraphRequestDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GraphDTO'
  /api/device/lamp:
    post:
      tags:
      - registration-controller
      operationId: saveLamp
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceRequestDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDeviceDTO'
  /api/device/gate:
    post:
      tags:
      - registration-controller
      operationId: saveGate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceRequestDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDeviceDTO'
  /api/device/charger:
    post:
      tags:
      - registration-controller
      operationId: saveCharger
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceRequestDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDeviceDTO'
  /api/device/battery:
    post:
      tags:
      - registration-controller
      operationId: saveBattery
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceRequestDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDeviceDTO'
  /api/device/ambientSensor:
    post:
      tags:
      - registration-controller
      operationId: saveAmbientSensor
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceRequestDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDeviceDTO'
  /api/device/airConditioner:
    post:
      tags:
      - registration-controller
      operationId: saveAirConditioner
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceRequestDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDeviceDTO'
  /api/airConditioner/{deviceId}/interval:
    post:
      tags:
      - air-conditioner-controller
      operationId: addAirConditionerInterval
      parameters:
      - name: deviceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ACIntervalDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ACIntervalDTO'
  /api/airConditioner/{deviceId}/action:
    post:
      tags:
      - air-conditioner-controller
      operationId: postActionRequest_1
      parameters:
      - name: deviceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AirConditionerActionRequest'
        required: true
      responses:
        "200":
          description: OK
  /api/washingMachine/{deviceId}:
    get:
      tags:
      - washing-machine-controller
      operationId: getWashingMachine
      parameters:
      - name: deviceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WashingMachineDTO'
  /api/washingMachine/{deviceId}/wmtasks:
    get:
      tags:
      - washing-machine-controller
      operationId: getWashingMachineWMTasks
      parameters:
      - name: deviceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WMTaskDTO'
  /api/washingMachine/{deviceId}/actions:
    get:
      tags:
      - washing-machine-controller
      operationId: getWashingMachineActions
      parameters:
      - name: deviceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AirConditionerActionDTO'
  /api/user/{id}:
    get:
      tags:
      - app-user-controller
      operationId: getUserByEmail
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUserDTO'
  /api/user/activate/{token}:
    get:
      tags:
      - app-user-controller
      operationId: activateUser
      parameters:
      - name: token
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUserDTO'
  /api/sprinkler/{deviceId}:
    get:
      tags:
      - sprinkler-controller
      operationId: getSprinkler
      parameters:
      - name: deviceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SprinklerDTO'
  /api/sprinkler/{deviceId}/recent:
    get:
      tags:
      - sprinkler-controller
      operationId: getRecentCommands
      parameters:
      - name: deviceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseListSprinklerCommandDTO'
  /api/sprinkler/{deviceId}/range:
    get:
      tags:
      - sprinkler-controller
      operationId: getRangeCommands
      parameters:
      - name: deviceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: start
        in: query
        required: true
        schema:
          type: string
      - name: end
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseListSprinklerCommandDTO'
  /api/sharing/property/{shareWithId}:
    get:
      tags:
      - sharing-controller
      operationId: getSharedProperties
      parameters:
      - name: shareWithId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SharedPropertyDTO'
  /api/sharing/device/{shareWithId}:
    get:
      tags:
      - sharing-controller
      operationId: getSharedDevices
      parameters:
      - name: shareWithId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SharedDeviceDTO'
  /api/property/{propertyId}:
    get:
      tags:
      - property-controller
      operationId: getProperty
      parameters:
      - name: propertyId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyResponseDTO'
  /api/property/pending:
    get:
      tags:
      - property-controller
      operationId: getPendingProperties
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PropertyResponseDTO'
  /api/property/city:
    get:
      tags:
      - property-controller
      operationId: getCities
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CityDTO'
  /api/property/byTimeOfDay/{propertyId}:
    get:
      tags:
      - property-controller
      operationId: getByTimeOfDay
      parameters:
      - name: propertyId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: start
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: end
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: whatId
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ByTimeOfDayDTO'
  /api/property/byMonthProperty/{propertyId}:
    get:
      tags:
      - property-controller
      operationId: getPyChartByCity
      parameters:
      - name: propertyId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: year
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: measurement
        in: query
        required: true
        schema:
          type: string
      - name: whatId
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BarChartDTO'
  /api/property/byDeviceType/{id}:
    get:
      tags:
      - property-controller
      operationId: getPyChartByDeviceType
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: start
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: end
        in: query
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PyChartDTO'
  /api/property/byCity:
    get:
      tags:
      - property-controller
      operationId: getPropertiesByCity
      parameters:
      - name: start
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: end
        in: query
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CityOverviewDTO'
  /api/property/byCityChart:
    get:
      tags:
      - property-controller
      operationId: getPyChartByCity_1
      parameters:
      - name: start
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: end
        in: query
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PyChartDTO'
  /api/property/accepted:
    get:
      tags:
      - property-controller
      operationId: getPropertiesForAdminOverview
      parameters:
      - name: start
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: end
        in: query
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PropertyResponseDTO'
  /api/lamp/{deviceId}:
    get:
      tags:
      - lamp-controller
      operationId: getLamp
      parameters:
      - name: deviceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceDTO'
  /api/lamp/{deviceId}/range:
    get:
      tags:
      - lamp-controller
      operationId: getRangeLightSensor
      parameters:
      - name: deviceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: start
        in: query
        required: true
        schema:
          type: string
      - name: end
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseListValueTimestampDTO'
  /api/lamp/{deviceId}/range/bulb:
    get:
      tags:
      - lamp-controller
      operationId: getDateRangeBulb
      parameters:
      - name: deviceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: start
        in: query
        required: true
        schema:
          type: string
      - name: end
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseListBulbOnOffMeasurement'
  /api/gate/{deviceId}:
    get:
      tags:
      - gate-controller
      operationId: getGate
      parameters:
      - name: deviceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GateDTO'
  /api/gate/{deviceId}/recent:
    get:
      tags:
      - gate-controller
      operationId: getRecentGateEvents
      parameters:
      - name: deviceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseListGateEventDTO'
  /api/gate/{deviceId}/range:
    get:
      tags:
      - gate-controller
      operationId: getRangeGateEvents
      parameters:
      - name: deviceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: start
        in: query
        required: true
        schema:
          type: string
      - name: end
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseListGateEventDTO'
  /api/device/{deviceId}:
    get:
      tags:
      - device-controller
      operationId: getDevice
      parameters:
      - name: deviceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceDTO'
  /api/device/regimes:
    get:
      tags:
      - device-controller
      operationId: getRegimes
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /api/device/regimesWashingMachine:
    get:
      tags:
      - device-controller
      operationId: getRegimesWashingMachine
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /api/device/regimesAirConditioner:
    get:
      tags:
      - device-controller
      operationId: getRegimesAirConditioner
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /api/device/owner/{ownerId}:
    get:
      tags:
      - device-controller
      operationId: getDevicesByOwner
      parameters:
      - name: ownerId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceDTO'
  /api/device/outdoor/{propertyId}:
    get:
      tags:
      - device-controller
      operationId: getOutdoor
      parameters:
      - name: propertyId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceDTO'
  /api/device/onlinePercent/{deviceId}:
    get:
      tags:
      - device-controller
      operationId: getOnlinePercentageInRange
      parameters:
      - name: deviceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: start
        in: query
        required: true
        schema:
          type: string
      - name: end
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PyChartDTO'
  /api/device/onlinePerUnit/{deviceId}:
    get:
      tags:
      - device-controller
      operationId: getOnlinePerUnit
      parameters:
      - name: deviceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: start
        in: query
        required: true
        schema:
          type: string
      - name: end
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseListValueTimestampDTO'
  /api/device/onlineIntervals/{deviceId}:
    get:
      tags:
      - device-controller
      operationId: getOnlineIntervals
      parameters:
      - name: deviceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: start
        in: query
        required: true
        schema:
          type: string
      - name: end
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseListValueTimestampDTO'
  /api/device/largeEnergy/{deviceId}/recent:
    get:
      tags:
      - solar-panel-controller
      operationId: getRecentGateEvents_1
      parameters:
      - name: deviceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: measurement
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseListGateEventDTO'
  /api/device/largeEnergy/{deviceId}/range:
    get:
      tags:
      - solar-panel-controller
      operationId: getRangeGateEvents_1
      parameters:
      - name: deviceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: start
        in: query
        required: true
        schema:
          type: string
      - name: end
        in: query
        required: true
        schema:
          type: string
      - name: measurement
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseListGateEventDTO'
  /api/device/largeEnergy/solar/{deviceId}:
    get:
      tags:
      - solar-panel-controller
      operationId: getSolarPanel
      parameters:
      - name: deviceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SolarPanelDTO'
  /api/device/largeEnergy/charger/{deviceId}:
    get:
      tags:
      - solar-panel-controller
      operationId: getCharger
      parameters:
      - name: deviceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChargerDTO'
  /api/device/largeEnergy/battery/{deviceId}:
    get:
      tags:
      - solar-panel-controller
      operationId: getBattery
      parameters:
      - name: deviceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatteryDTO'
  /api/device/energyDevices/{propertyId}:
    get:
      tags:
      - device-controller
      operationId: getEnergyDevices
      parameters:
      - name: propertyId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceDTO'
  /api/device/appliances/{propertyId}:
    get:
      tags:
      - device-controller
      operationId: getAppliances
      parameters:
      - name: propertyId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceDTO'
  /api/ambientSensor/{deviceId}:
    get:
      tags:
      - ambient-sensor-controller
      operationId: getAmbientSensor
      parameters:
      - name: deviceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AmbientSensorDTO'
  /api/ambientSensor/{deviceId}/values:
    get:
      tags:
      - ambient-sensor-controller
      operationId: getAmbientSensorTemp
      parameters:
      - name: deviceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: from
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: to
        in: query
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AmbientSensorTempHumDTO'
  /api/airConditioner/{deviceId}:
    get:
      tags:
      - air-conditioner-controller
      operationId: getAirConditioner
      parameters:
      - name: deviceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AirConditionerDTO'
  /api/airConditioner/{deviceId}/intervals:
    get:
      tags:
      - air-conditioner-controller
      operationId: getAirConditionerIntervals
      parameters:
      - name: deviceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ACIntervalDTO'
  /api/airConditioner/{deviceId}/actions:
    get:
      tags:
      - air-conditioner-controller
      operationId: getAirConditionerActions
      parameters:
      - name: deviceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AirConditionerActionDTO'
  /api/washingMachine/{deviceId}/wmtask/{wmtasklId}:
    delete:
      tags:
      - washing-machine-controller
      operationId: deleteWashingMachineTask
      parameters:
      - name: deviceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: wmtasklId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
  /api/airConditioner/{deviceId}/interval/{intervalId}:
    delete:
      tags:
      - air-conditioner-controller
      operationId: deleteAirConditionerInterval
      parameters:
      - name: deviceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: intervalId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
components:
  schemas:
    SprinklerScheduleDTO:
      type: object
      properties:
        deviceId:
          type: integer
          format: int32
        startHour:
          type: integer
          format: int32
        endHour:
          type: integer
          format: int32
        weekdays:
          type: array
          items:
            type: integer
            format: int32
    PropertyRejectionRequestDTO:
      type: object
      properties:
        rejectionReason:
          type: string
    AppUserDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        lastName:
          type: string
        email:
          type: string
        password:
          type: string
        active:
          type: boolean
    CityDTO:
      required:
      - country
      - id
      - name
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        country:
          $ref: '#/components/schemas/CountryDTO'
    CountryDTO:
      required:
      - id
      - name
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    PropertyResponseDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        propertyType:
          type: string
        address:
          type: string
        city:
          $ref: '#/components/schemas/CityDTO'
        propertyOwner:
          $ref: '#/components/schemas/AppUserDTO'
        imagePath:
          type: string
        area:
          type: number
          format: double
        floorCount:
          type: integer
          format: int32
        propertyStatus:
          type: string
        energy:
          type: number
          format: double
        electodistribution:
          type: number
          format: double
    GateDTO:
      type: object
      properties:
        id:
          type: integer
          format: int32
        state:
          type: boolean
        modelName:
          type: string
        usesElectricity:
          type: boolean
        consumptionAmount:
          type: number
          format: double
        propertyId:
          type: integer
          format: int32
        imagePath:
          type: string
        deviceType:
          type: string
        "on":
          type: boolean
        licencePlates:
          type: array
          items:
            type: string
        open:
          type: boolean
        public:
          type: boolean
    ChargerDTO:
      type: object
      properties:
        id:
          type: integer
          format: int32
        state:
          type: boolean
        modelName:
          type: string
        usesElectricity:
          type: boolean
        consumptionAmount:
          type: number
          format: double
        propertyId:
          type: integer
          format: int32
        imagePath:
          type: string
        deviceType:
          type: string
        "on":
          type: boolean
        chargingStrength:
          type: number
          format: double
        portNumber:
          type: integer
          format: int32
        availablePortNumber:
          type: integer
          format: int32
        percentage:
          type: integer
          format: int32
    WMTaskDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        startTime:
          type: string
        action:
          type: string
    AirConditionerActionRequest:
      type: object
      properties:
        action:
          type: string
        userEmail:
          type: string
    LoginDTO:
      required:
      - password
      type: object
      properties:
        email:
          maxLength: 100
          minLength: 0
          type: string
        password:
          type: string
    TokenResponseDTO:
      type: object
      properties:
        accessToken:
          type: string
    ShareActionDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        email:
          type: string
    SharedPropertyDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        shareWith:
          $ref: '#/components/schemas/AppUserDTO'
        property:
          $ref: '#/components/schemas/PropertyResponseDTO'
    DeviceDTO:
      type: object
      properties:
        id:
          type: integer
          format: int32
        state:
          type: boolean
        modelName:
          type: string
        usesElectricity:
          type: boolean
        consumptionAmount:
          type: number
          format: double
        propertyId:
          type: integer
          format: int32
        imagePath:
          type: string
        deviceType:
          type: string
        "on":
          type: boolean
    SharedDeviceDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        shareWith:
          $ref: '#/components/schemas/AppUserDTO'
        device:
          $ref: '#/components/schemas/DeviceDTO'
    PropertyRequestDTO:
      required:
      - address
      - area
      - cityId
      - floorCount
      - propertyType
      type: object
      properties:
        propertyType:
          pattern: HOUSE|APARTMENT
          type: string
        address:
          maxLength: 50
          minLength: 0
          type: string
        cityId:
          type: integer
          format: int32
        area:
          maximum: 10000
          minimum: 0
          type: number
          format: double
        floorCount:
          maximum: 100
          minimum: 0
          type: integer
          format: int32
    ApiResponsePropertyResponseDTO:
      type: object
      properties:
        status:
          type: integer
          format: int32
        data:
          $ref: '#/components/schemas/PropertyResponseDTO'
    CityGraphDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        from:
          type: integer
          format: int64
        to:
          type: integer
          format: int64
        measurement:
          type: string
        whatId:
          type: string
    GraphDTO:
      type: object
      properties:
        x:
          type: integer
          format: int64
        "y":
          type: number
          format: double
    LabeledGraphDTO:
      type: object
      properties:
        label:
          type: string
        graphDTOS:
          type: array
          items:
            $ref: '#/components/schemas/GraphDTO'
    MessageDTO:
      required:
      - message
      - topic
      type: object
      properties:
        message:
          type: string
        topic:
          type: string
    ApiResponseMessageDTO:
      type: object
      properties:
        status:
          type: integer
          format: int32
        data:
          $ref: '#/components/schemas/MessageDTO'
    DeviceRequestDTO:
      required:
      - consumptionAmount
      - modelName
      - propertyId
      type: object
      properties:
        modelName:
          type: string
        usesElectricity:
          type: boolean
        consumptionAmount:
          maximum: 1000000
          minimum: 0
          type: number
          format: double
        propertyId:
          type: integer
          format: int32
        regimes:
          type: array
          items:
            type: string
        minTemp:
          maximum: 60
          minimum: 0
          type: integer
          format: int32
        maxTemp:
          maximum: 60
          minimum: 0
          type: integer
          format: int32
        panelSize:
          maximum: 10000
          minimum: 0
          type: number
          format: double
        efficiency:
          maximum: 100
          minimum: 0
          type: number
          format: double
        capacity:
          maximum: 1000000
          minimum: 0
          type: number
          format: double
        portNumber:
          maximum: 100
          minimum: 0
          type: integer
          format: int32
    ApiResponseDeviceDTO:
      type: object
      properties:
        status:
          type: integer
          format: int32
        data:
          $ref: '#/components/schemas/DeviceDTO'
    GraphRequestDTO:
      type: object
      properties:
        id:
          type: string
        from:
          type: string
        to:
          type: string
        measurement:
          type: string
    ACIntervalDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        startTime:
          type: string
        endTime:
          type: string
        action:
          type: string
    WashingMachineDTO:
      type: object
      properties:
        id:
          type: integer
          format: int32
        state:
          type: boolean
        modelName:
          type: string
        usesElectricity:
          type: boolean
        consumptionAmount:
          type: number
          format: double
        propertyId:
          type: integer
          format: int32
        imagePath:
          type: string
        deviceType:
          type: string
        "on":
          type: boolean
        regimes:
          type: array
          items:
            type: string
            enum:
            - wool30
            - wool40
            - wool60
            - cotton30
            - cotton40
            - cotton60
            - delicate
            - automatic
        currentAction:
          type: string
    AirConditionerActionDTO:
      type: object
      properties:
        action:
          type: string
        email:
          type: string
        date:
          type: string
    SprinklerDTO:
      type: object
      properties:
        id:
          type: integer
          format: int32
        state:
          type: boolean
        modelName:
          type: string
        usesElectricity:
          type: boolean
        consumptionAmount:
          type: number
          format: double
        propertyId:
          type: integer
          format: int32
        imagePath:
          type: string
        deviceType:
          type: string
        "on":
          type: boolean
        scheduleMode:
          type: boolean
        scheduleDTO:
          $ref: '#/components/schemas/SprinklerScheduleDTO'
    ApiResponseListSprinklerCommandDTO:
      type: object
      properties:
        status:
          type: integer
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/SprinklerCommandDTO'
    SprinklerCommandDTO:
      type: object
      properties:
        caller:
          type: string
        callerUsername:
          type: string
        command:
          type: string
        timestamp:
          type: string
    ByTimeOfDayDTO:
      type: object
      properties:
        dayElec:
          type: number
          format: double
        nightElec:
          type: number
          format: double
        dayDist:
          type: number
          format: double
        nightDist:
          type: number
          format: double
    BarChartDTO:
      type: object
      properties:
        label:
          type: string
        "y":
          type: number
          format: double
    PyChartDTO:
      type: object
      properties:
        indexLabel:
          type: string
        "y":
          type: number
          format: double
    CityOverviewDTO:
      type: object
      properties:
        city:
          $ref: '#/components/schemas/CityDTO'
        propertyesNum:
          type: integer
          format: int32
        energy:
          type: number
          format: double
        electodistribution:
          type: number
          format: double
    ApiResponseListValueTimestampDTO:
      type: object
      properties:
        status:
          type: integer
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/ValueTimestampDTO'
    ValueTimestampDTO:
      type: object
      properties:
        value:
          type: string
        timestamp:
          type: string
    ApiResponseListBulbOnOffMeasurement:
      type: object
      properties:
        status:
          type: integer
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/BulbOnOffMeasurement'
    BulbOnOffMeasurement:
      type: object
      properties:
        value:
          type: string
        timestamp:
          type: string
    ApiResponseListGateEventDTO:
      type: object
      properties:
        status:
          type: integer
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/GateEventDTO'
    GateEventDTO:
      type: object
      properties:
        caller:
          type: string
        eventType:
          type: string
        timestamp:
          type: string
        callerUsername:
          type: string
    SolarPanelDTO:
      type: object
      properties:
        id:
          type: integer
          format: int32
        state:
          type: boolean
        modelName:
          type: string
        usesElectricity:
          type: boolean
        consumptionAmount:
          type: number
          format: double
        propertyId:
          type: integer
          format: int32
        imagePath:
          type: string
        deviceType:
          type: string
        "on":
          type: boolean
        surfaceSize:
          type: number
          format: double
        efficiency:
          type: number
          format: double
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
    BatteryDTO:
      type: object
      properties:
        id:
          type: integer
          format: int32
        state:
          type: boolean
        modelName:
          type: string
        usesElectricity:
          type: boolean
        consumptionAmount:
          type: number
          format: double
        propertyId:
          type: integer
          format: int32
        imagePath:
          type: string
        deviceType:
          type: string
        "on":
          type: boolean
        capacity:
          type: number
          format: double
        currentFill:
          type: number
          format: double
    AmbientSensorDTO:
      type: object
      properties:
        id:
          type: integer
          format: int32
        state:
          type: boolean
        modelName:
          type: string
        usesElectricity:
          type: boolean
        consumptionAmount:
          type: number
          format: double
        propertyId:
          type: integer
          format: int32
        imagePath:
          type: string
        deviceType:
          type: string
        "on":
          type: boolean
    AmbientSensorDateValueDTO:
      type: object
      properties:
        dates:
          type: array
          items:
            type: string
        values:
          type: array
          items:
            type: number
            format: double
    AmbientSensorTempHumDTO:
      type: object
      properties:
        temp:
          $ref: '#/components/schemas/AmbientSensorDateValueDTO'
        hum:
          $ref: '#/components/schemas/AmbientSensorDateValueDTO'
        length:
          type: integer
          format: int64
    AirConditionerDTO:
      type: object
      properties:
        id:
          type: integer
          format: int32
        state:
          type: boolean
        modelName:
          type: string
        usesElectricity:
          type: boolean
        consumptionAmount:
          type: number
          format: double
        propertyId:
          type: integer
          format: int32
        imagePath:
          type: string
        deviceType:
          type: string
        "on":
          type: boolean
        regimes:
          type: array
          items:
            type: string
            enum:
            - colling
            - heating
            - ventilation
            - automatic
        currentAction:
          type: string
        temp:
          type: integer
          format: int32
        minTemp:
          type: integer
          format: int32
        maxTemp:
          type: integer
          format: int32
